global
    # Set this to your desired maximum connection count.
    maxconn         2048
    stats socket    /var/run/haproxy.sock mode 660 level admin expose-fd listeners
    log             127.0.0.1 local0
    uid             200
    gid             200
    chroot          /var/empty
    daemon

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL). This list is from:
    #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    # An alternative list with additional directives can be obtained from
    #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3

defaults
    log             global
    mode            http
    option          httplog
    option          dontlognull
    option          forwardfor
    option          http-server-close
    timeout connect 5000
    timeout client  50000
    timeout server  50000

frontend http-in
    bind            *:80
    reqadd          X-Forwarded-Proto:\ http
    # default backend
    default_backend be_web

frontend https-in
    bind            *:443 ssl crt /etc/haproxy/ssl/domain.com.pem
    reqadd          X-Forwarded-Proto:\ https
    # content switching
    use_backend     be_api if { hdr(host) -i api.domain.com }
    use_backend     be_img if { hdr(host) -i img.domain.com }
    use_backend     be_img if { path_beg /img /css /js }
    # default backend
    default_backend be_web

# The web backend (default backend).
backend be_web
    mode            http
    balance         roundrobin
    retries         2
    option          httpchk HEAD /
    # Redirect with code 301 so the browser understands it is a redirect. If it's not SSL_FC.
    # ssl_fc: Returns true when the front connection was made via an SSL/TLS transport
    # layer and is locally deciphered. This means it has matched a socket declared
    # with a "bind" line having the "ssl" option.
    redirect        scheme https code 301 if !{ ssl_fc }
    # Servers
    server          websrv1 web:80 check

# The api backend. This backend for Host: api.domain.com
backend be_api
    mode            http
    balance         roundrobin
    retries         2
    option          httpchk HEAD /api/docs
    redirect        scheme https code 301 if !{ ssl_fc }
    server          apisrv1 api:80 check

# The static backend. This backend for 'Host: img.domain.com', /img and /css.
backend be_img
    mode            http
    balance         roundrobin
    retries         2
    option          httpchk HEAD /img/favicon.ico
    redirect        scheme https code 301 if !{ ssl_fc }
    server          imgsrv1 static:80 check inter 1000
